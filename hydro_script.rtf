{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red23\green23\blue23;\red202\green202\blue202;
\red89\green138\blue67;\red194\green126\blue101;\red167\green197\blue152;\red202\green202\blue202;\red23\green23\blue23;
}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c41569\c60000\c33333;\cssrgb\c80784\c56863\c47059;\cssrgb\c70980\c80784\c65882;\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c11765\c11765;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  pandas \cf2 \strokec2 as\cf4 \strokec4  pd \cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  numpy \cf2 \strokec2 as\cf4 \strokec4  np \cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  gridstatusio \cf2 \strokec2 as\cf4 \strokec4  grid\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  os\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # import API key & hydro data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 client = grid.GridStatusClient(\cf6 \cb3 \strokec6 'c6e457c5394b4f9c9617294d52b3c84b'\cf4 \cb3 \strokec4 )\cb1 \
\cb3 hydro_capacity = pd.read_csv(\cf6 \cb3 \strokec6 '/Users/peterambiel/Downloads/hydro_resource_capacity.csv'\cf4 \cb3 \strokec4 )\cb1 \
\
\cb3 df_caiso_mix = client.get_dataset(\cb1 \
\cb3     dataset=\cf6 \cb3 \strokec6 "caiso_fuel_mix"\cf4 \cb3 \strokec4 ,\cb1 \
\cb3     start=\cf2 \strokec2 None\cf4 \strokec4 ,  \cb1 \
\cb3     end=\cf2 \strokec2 None\cf4 \strokec4 , \cb1 \
\cb3     tz=\cf6 \cb3 \strokec6 "US/Pacific"\cf4 \cb3 \strokec4 ,  \cb1 \
\cb3 )\cb1 \
\
\cb3 hydro_capacity_filtered = hydro_capacity.loc[:, [\cf6 \cb3 \strokec6 'Resource'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 '2018'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 '2019'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 '2020'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 '2021'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 '2022'\cf4 \cb3 \strokec4 ]]\cb1 \
\
\cb3 df_caiso_mix_filtered = df_caiso_mix.loc[:, [\cf6 \cb3 \strokec6 'interval_start_local'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'interval_end_local'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'small_hydro'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'large_hydro'\cf4 \cb3 \strokec4 ]]\cb1 \
\
\cb3 df_caiso_mix_filtered = (df_caiso_mix_filtered\cb1 \
\cb3     .assign(year = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'interval_start_local'\cf4 \cb3 \strokec4 ].dt.year,\cb1 \
\cb3         month = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'interval_start_local'\cf4 \cb3 \strokec4 ].dt.month,\cb1 \
\cb3         day = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'interval_start_local'\cf4 \cb3 \strokec4 ].dt.day, \cb1 \
\cb3         hour = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'interval_start_local'\cf4 \cb3 \strokec4 ].dt.hour)\cb1 \
\cb3     .groupby([\cf6 \cb3 \strokec6 'year'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'month'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'day'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'hour'\cf4 \cb3 \strokec4 ])\cb1 \
\cb3     .apply(\cf2 \strokec2 lambda\cf4 \strokec4  x: x.assign(mean_hourly_large_hydro=x[\cf6 \cb3 \strokec6 'large_hydro'\cf4 \cb3 \strokec4 ].mean(), \cb1 \
\cb3         mean_hourly_small_hydro=x[\cf6 \cb3 \strokec6 'small_hydro'\cf4 \cb3 \strokec4 ].mean()))\cb1 \
\cb3     .assign(large_hydro_capacity = \cf7 \cb3 \strokec7 12281\cf4 \cb3 \strokec4 , small_hydro_capacity = \cf7 \cb3 \strokec7 1759\cf4 \cb3 \strokec4 )\cb1 \
\cb3     .assign(large_hydro_cf = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'mean_hourly_large_hydro'\cf4 \cb3 \strokec4 ]/ x[\cf6 \cb3 \strokec6 'large_hydro_capacity'\cf4 \cb3 \strokec4 ], \cb1 \
\cb3         small_hydro_cf = \cf2 \strokec2 lambda\cf4 \strokec4  x: x[\cf6 \cb3 \strokec6 'mean_hourly_small_hydro'\cf4 \cb3 \strokec4 ]/ x[\cf6 \cb3 \strokec6 'small_hydro_capacity'\cf4 \cb3 \strokec4 ])\cb1 \
\cb3     .reset_index()\cb1 \
\cb3     .drop_duplicates(subset=[\cf6 \cb3 \strokec6 'year'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'month'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'day'\cf4 \cb3 \strokec4 , \cf6 \cb3 \strokec6 'hour'\cf4 \cb3 \strokec4 ], keep=\cf6 \cb3 \strokec6 'first'\cf4 \cb3 \strokec4 ) \cb1 \
\cb3 )\cb1 \
\
\
\cb3 folder_path = \cf6 \cb3 \strokec6 '/Users/peterambiel/Desktop/good_model/'\cf4 \cb1 \strokec4 \
\cb3 file_name= \cf6 \cb3 \strokec6 'hydro_capacity_factor.csv'\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Create the folder if it doesn't exist\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 os.makedirs(folder_path, exist_ok=\cf2 \strokec2 True\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Write the DataFrame to a CSV file in the specified folder\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb9 \outl0\strokewidth0 df_caiso_mix_filtered\cf4 \cb3 \outl0\strokewidth0 \strokec4 .to_csv(os.path.join(folder_path, file_name), index=\cf2 \strokec2 False\cf4 \strokec4 )\cb1 \
}